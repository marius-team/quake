name: Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  BUILD_TYPE: Debug

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04, ubuntu-24.04]
        cc: [gcc]
        include:
          - os: ubuntu-20.04
            cc: gcc
            python_version: "3.11"
          - os: ubuntu-22.04
            cc: gcc
            python_version: "3.11"
          - os: ubuntu-24.04
            cc: gcc
            python_version: "3.11"
    name: ${{ matrix.os }} - ${{ matrix.cc }}

    steps:
      - uses: actions/checkout@v4

      - name: Install system dependencies
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y curl wget build-essential

      - name: Install Miniconda
        shell: bash
        run: |
          wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
          bash miniconda.sh -b -p $HOME/miniconda
          echo "$HOME/miniconda/bin" >> $GITHUB_PATH
          export PATH="$HOME/miniconda/bin:$PATH"
          conda init bash

      - name: Create and activate conda environment
        shell: bash
        run: |
          source ~/.bashrc
          conda create -q -n test-env "python=${{ matrix.python_version }}"
          conda activate test-env

          # Install dependencies with conda, including PyTorch
          conda install numpy pytorch cpuonly -c pytorch

      - name: Build Project
        shell: bash
        run: |
          source ~/.bashrc
          conda activate test-env
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
                -DBUILD_TESTS=ON \
                -DQUAKE_ENABLE_GPU=OFF \
                -DPython_EXECUTABLE=$(which python) \
                ..
          make bindings -j2